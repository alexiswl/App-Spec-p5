---
#valid:
-
  args: [ mysimpleapp, -h ]
  stdout:
  - regex: 'Usage: mysimpleapp \[options\]'
  exit: 0
-
  args: [ mysimpleapp, -vvv ]
  stdout:
  - regex: 'Options: verbose=3'
  exit: 0
-
  args: [ myapp, cook, tea, --sugar, -vv, --verbose ]
  stdout:
    - regex: 'Options: sugar=1,verbose=3'
    - regex: 'Parameters: drink=tea'
    - regex: 'Subcommands: cook'
  exit: 0
-
  args: [ myapp, cook, tea, --with, "almond milk" ]
  stdout:
    - regex: 'Options: with=almond milk'
    - regex: 'Parameters: drink=tea'
    - regex: 'Subcommands: cook'
  exit: 0
-
  args: [ myapp, help ]
  stdout:
    regex: 'Usage: myapp <subcommands> \[options\]'
  exit: 0
-
  args: [ myapp, convert, temperature, celsius, 23, kelvin ]
  stdout:
    - regex: 296\.15K
  exit: 0

#invalid:
-
  # missing parameter
  args: [ myapp, cook ]
  stderr:
    - regex: 'Usage: myapp cook <drink> \[options\]'
    - regex: (?s:drink.*missing)
  exit: 255
-
  # invalid subcommand
  args: [ myapp, foo ]
  stderr:
  - regex: 'Usage: myapp <subcommands>'
  - regex: Unknown subcommand 'foo'
  exit: 255
-
  args: [ myapp, cook, tea, --with, salt ]
  stderr:
  - regex: 'Usage: myapp cook <drink> \[options\]'
  - regex: 'with.*invalid'
  exit: 255
-
  args: [ myapp ]
  stderr:
  - regex: 'Usage: myapp <subcommands>'
  - regex: Missing subcommand
  exit: 255
-
  args: [ myapp, weather, show, Netherlands ]
  stderr:
  - regex: 'Usage: myapp weather show <country> <city>\+'
  - regex: 'city.*missing'
  exit: 255
-
   args: [ myapp, convert, nonsense ]
   stderr:
   - regex: 'Usage: myapp convert <type> <source> <value> <target>\+'
   - regex: 'type.*invalid'
   exit: 255
-
   args: [ myapp, convert, distance, meter, 23, foot, foot ]
   stderr:
   - regex: 'Usage: myapp convert <type> <source> <value> <target>\+'
   - regex: 'target.*not_unique'
   exit: 255
-
  args: [ myapp, convert, distance, meter, foobar, foot ]
  stderr:
  - regex: 'Usage: myapp convert <type> <source> <value> <target>\+'
  - regex: 'value.*invalid'
  exit: 255

#completion:
-
  env:
    PERL5_APPSPECRUN_COMPLETION_PARAMETER: country
    PERL5_APPSPECRUN_SHELL: zsh
  args: [ myapp, weather, show ]
  stdout:
    regex: Austria\nGermany\nNetherlands
  exit: 0
-
  env:
    PERL5_APPSPECRUN_COMPLETION_PARAMETER: city
    PERL5_APPSPECRUN_SHELL: bash
  args: [ myapp, weather, show, Netherlands ]
  stdout:
    - regex: Amsterdam\tAmsterdam
    - regex: Echt\tEcht
  exit: 0
-
  env:
    PERL5_APPSPECRUN_COMPLETION_PARAMETER: city
  args: [ myapp, weather, show, Netherlands ]
  stdout:
    regex: '^$'
  exit: 0

-
  env:
    PERL5_APPSPECRUN_COMPLETION_PARAMETER: target
    PERL5_APPSPECRUN_SHELL: zsh
  args: [ myapp, convert, distance, meter, 23 ]
  stdout:
    - regex: 'foot'
    - regex: 'inch'
  exit: 0
-
  env:
    PERL5_APPSPECRUN_COMPLETION_PARAMETER: target
    PERL5_APPSPECRUN_SHELL: zsh
  args: [ myapp, convert, distance, meter, 23, foot ]
  stdout:
    - regex: '^inch$'
  exit: 0

# vim:et:sts=2:sws=2:sw=2:foldmethod=indent
